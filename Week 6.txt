1)
You are provided with a playlist containing N songs, each has a unique positive integer length. Assume you like all the songs from this playlist, but there is a song, which you like more than others.
It is named "Computing Paradox".

You decided to sort this playlist in increasing order of songs length. For example, if the lengths of the songs in the playlist were {1, 3, 5, 2, 4} after sorting it becomes {1, 2, 3, 4, 5}.
Before the sorting, "Computing Paradox" was on the kth position (1-indexing is assumed for the playlist) in the playlist.

Your task is to find the position of "Computing Paradox" in the sorted playlist.

N=int(input())
A=[int(c) for c in input().split()]
k=int(input())
a=A[k-1]
A.sort()
for i in range(len(A)):
    if(a==A[i]):
        print(i+1,end='')


2)
Given a positive integer number n, you have to write a program that generates a dictionary d which contains (i, i*i*i) such that i is the key and i*i*i is its value, where i is from 1 to n (both included).
Then you have to just print this dictionary d.

n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i*i

print(d)



3)
Given an integer number n, define a function named printDict() which can print a dictionary where the keys are numbers between 1 and n (both included) and the values are square of keys.
The function printDict() doesn't take any argument.

n=int(input())
def printDict():
    d={i:i**2 for i in range(1,n+1)}
    print(d,end='')
printDict()